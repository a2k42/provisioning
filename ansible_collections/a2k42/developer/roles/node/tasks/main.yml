---
- name: Check if .nvm directory exists
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.nvm"
  register: nvm_dir
  changed_when: false

- name: Download nvm installation script
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh
    dest: /tmp/nvm.install.sh
    mode: "0750"
    checksum: "be675049552a27d529ef5565c73708e7b18018e9778b0ec184c98a296ea498d4d89fdf2ef10374bf115b23a95f3b37607c3a016919c04be130df99f92165fb02"
  when: not nvm_dir
  # https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.7.tar.gz

- name: Ensure NVM Installed
  ansible.builtin.command: /tmp/nvm.install.sh -y
  register: result
  when: not nvm_dir
  changed_when: "'Close and reopen your terminal to start' in result.stdout"

- name: Show result
  ansible.builtin.debug:
    msg: "{{ result.stdout }}"
  when: not nvm_dir

- name: Ensure Node LTS Installed
  ansible.builtin.shell: ". nvm.sh && nvm install --lts"
  args:
    executable: /bin/bash
    chdir: "{{ ansible_user_dir }}/.nvm"
    creates: "{{ ansible_user_dir }}/.nvm/versions/node/"
  # environment:
  #   NVM_DIR: "/home/{{ ansible_user }}/.nvm"
  register: lts
  changed_when: "'Downloading and installing node' in lts.stdout"

- name: Show lts
  ansible.builtin.debug:
    msg: "{{ lts.stdout }}"

- name: Ensure PNPM Installed
  ansible.builtin.shell: ". nvm.sh && npm install --global pnpm"
  args:
    executable: /bin/bash
    chdir: "{{ ansible_user_dir }}/.nvm"
  register: pnpm
  changed_when: "'added 1 package' in pnpm.stdout"


# - name: Get Node Version
#   ansible.builtin.shell: ". nvm.sh && node --version"
#   args:
#     executable: /bin/bash
#     chdir: "{{ ansible_user_dir }}/.nvm"
#   register: node_version
#   changed_when: false

# - name: Ensure PNPM Installed
#   community.general.npm:
#     name: pnpm
#     executable: "{{ ansible_user_dir }}/.nvm/versions/node/{{ node_version.stdout }}/bin/npm"      # If not installed on system, use nvm
#     global: true
    # ignore_scripts: true
    # no_optional: true
    # state: present
    # /home/test/.nvm/versions/node/v20.15.0/bin/npm
    # no_bin_links: true

# TODO
# - name: Ensure PNPM Installed
#   ansible.builtin.get_url:
#     url: https://get.pnpm.io/install.sh
#     dest: /tmp/pnpm.install.sh
#     mode: "0750"
    # checksum: "be675049552a27d529ef5565c73708e7b18018e9778b0ec184c98a296ea498d4d89fdf2ef10374bf115b23a95f3b37607c3a016919c04be130df99f92165fb02"
  # when: not nvm_dir

# - name: Add NodeSource Repository
#   ansible.builtin.include_role:
#     name: add_ppa
#   vars:
#     keyserver_url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
#     keyname: nodesource.asc
#     package_url: https://deb.nodesource.com/node_19.x
#     codename: jammy
#     repo: nodesource
#     repo_state: present

# - name: Open Firewall Ports
#   ufw:
#     rule: "allow"
#     name: "APT"
#     dest: "{{ item.dest }}"
#     direction: "out"
#     comment: "deb.nodesource.com -> akami.net"
#   loop:
#   - dest: "62.252.115.26"
#   - dest: "62.252.115.34"
#   notify: reload ufw

# - name: Ensure Node Installed (System)
#   apt:
#     name: nodejs
#     state: latest

# - name: Ensure NPM Installed (System)
#   apt:
#     name: npm
#     state: latest
